{"version":3,"sources":["components/Autocomplete/Autocomplete.js","store/firebase/hooks/customers/useWatchCustomers.js","store/redux/hooks/useDialogProvider.js","routes/pages/Customers.js","components/ContainerWithCenteredItems/types.js","components/ContainerWithCenteredItems/ContainerWithCenteredItems.js","components/Spacer/StyledWrapper.js","components/Spacer/types.js","components/Spacer/Spacer.js","components/ColorPicker/types.js","components/ColorPicker/ColorPicker.js","store/firebase/utils.js","components/page-components/PageContainer/PageContainer.js","components/Form/components/Text.js","components/Form/components/Password.js","components/Form/components/Checkbox.js","components/Form/components/ColorPicker.js","components/Form/components/index.js","components/Form/Form.js","components/CenteredTypography/CenteredTypography.js","components/page-components/PageTitle/PageTitle.js","components/VerticalTabs/types.js","components/VerticalTabs/TabPanel.js","components/VerticalTabs/VerticalTabs.js","components/VerticalTabs/PanelContainer.js","containers/VehicleSelector/CustomerInfo.js","store/firebase/hooks/customers/useCustomer.js"],"names":["Autocomplete","options","onChange","label","rest","inputAdornment","getOptionLabel","option","title","style","width","renderInput","params","TextField","variant","NotFound","Typography","useWatchCustomers","userId","useAuth","isDesignatedSalesperson","useRoles","console","log","useFirestoreConnect","collection","where","customersFromFirestore","useSelector","state","firestore","data","customers","pending","isLoaded","LoadingIndicator","size","fullWidth","error","isEmpty","Object","keys","map","key","id","mapFromFireStore","useDialogProvider","dispatch","useDispatch","openTextDialog","useCallback","content","displayTextDialog","openComponentDialog","displayComponentDialog","openHtmlDialog","displayHtmlDialog","openFormDialog","formProps","displayFormDialog","openConfirmDialog","callback","onError","confirmText","cancelText","displayConfirmDialog","openLoadingDialog","a","successCalback","ContainerWithCenteredItems","getErrorMessageFromFetch","getCallbackMethod","type","cb","displayError","displaySuccess","closeDialog","hideDialog","setPending","setDialogProps","Customers","createCustomer","useCustomer","customerList","firstName","lastName","value","push","useHistory","goToCustomer","BASE_PATH","openCustomerAddDialog","onSubmit","props","isPending","CustomerInfo","submitText","onCustomerAddSubmit","PageContainer","PageTitle","icon","CustomersIcon","Spacer","direction","spacing","Grid","container","justify","alignItems","_","TooltipButton","tooltip","onClick","AddIcon","bg","node","bool","StyledGrid","styled","$horizontal","$vertical","children","horizontal","vertical","defaultProps","StyledWrapper","span","theme","$direction","$spacing","isRequired","numberOrString","parseInt","string","func","ColoredIcon","CheckboxIcon","$bg","$size","shape","borderRadius","ColorPicker","forwardRef","ref","color","onColorChange","Popover","buttonComponent","component","colors","PRIMARY_COLOR","SECONDARY_COLOR","onChangeComplete","hex","passCallback","toFirestore","reduce","acc","Date","JSON","stringify","fromFirestore","includes","parse","firebase","default","Timestamp","toDate","Paper","breakpoints","up","Text","Password","Checkbox","FormControlLabel","control","propTypes","FORM_COMPONENT_TYPES","TEXT","PASSWORD","CHECKBOX","COLOR_PICKER","COMPONENTS","Form","items","schema","defaultValues","ignoreAutocomplete","ignoreAutocompleteByDefault","useForm","resolver","yupResolver","handleSubmit","errors","inputRefs","useRef","useEffect","forEach","name","current","createRef","err","errorKeys","length","refName","focus","setTimeout","noValidate","autoComplete","ind","required","defaultValue","restFieldProps","As","render","rhfProps","e","target","checked","as","autoFocus","inputRef","_props","fieldName","rules","field","helperText","message","getRequiredField","inputProps","FormGroup","hidden","item","xs","sm","md","text","loading","CenteredTypography","subtitle","fontSize","cloneElement","getElementFromElementOrType","arrayOf","panel","elementOrType","any","Wrapper","div","TabPanel","index","other","role","aria-labelledby","Box","p","palette","background","level1","StyledTabs","Tabs","divider","VerticalTabs","list","React","useState","setValue","tabs","panels","Tab","orientation","event","newValue","aria-label","indicatorColor","textColor","PanelContainer","customerSchema","yup","address","phoneNumber","matches","maxWidth","notifyError","useNotificationProvider","designatedSalespersonId","useFirestore","doc","date","add","createdOn","updatedOn","vehicleSelection","vehicleModel","exteriorColor","interiorColor","newId","updateCustomer","update","deleteCustomer","customerId","delete"],"mappings":"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","file":"static/js/12.b32c22a0.chunk.js","sourcesContent":["import { Autocomplete as MuiAutocomplete } from '@material-ui/lab';\r\nimport { TextField } from '@material-ui/core';\r\n\r\n/**\r\n *\r\n * @example\r\n * ```js\r\n * const options = [\r\n * \t{ title: 'The Shawshank Redemption', year: 1994 },\r\n * \t{ title: 'The Godfather', year: 1972 },\r\n * ];\r\n * ```\r\n *\r\n * @component\r\n * @param {...(import('@material-ui/lab').AutocompleteProps}\r\n */\r\nconst Autocomplete = ({\r\n\toptions,\r\n\tonChange,\r\n\tlabel,\r\n\tinputAdornment,\r\n\t...rest\r\n}) => {\r\n\treturn (\r\n\t\t<MuiAutocomplete\r\n\t\t\t// id=\"combo-box-demo\"\r\n\t\t\tonChange={onChange}\r\n\t\t\toptions={options}\r\n\t\t\tgetOptionLabel={option => option.title}\r\n\t\t\tstyle={{ width: 300 }}\r\n\t\t\trenderInput={params => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\t{...params}\r\n\t\t\t\t\tlabel={label}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t// InputProps={{\r\n\t\t\t\t\t// \t...params.InputProps,\r\n\t\t\t\t\t// \tendAdornment: (\r\n\t\t\t\t\t// \t\t<>\r\n\t\t\t\t\t// \t\t\t{inputAdornment}\r\n\t\t\t\t\t// \t\t\t{params.InputProps.endAdornment}\r\n\t\t\t\t\t// \t\t</>\r\n\t\t\t\t\t// \t),\r\n\t\t\t\t\t// }}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Autocomplete;\r\n","import React from 'react';\r\nimport { isEmpty, isLoaded, useFirestoreConnect } from 'react-redux-firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport LoadingIndicator from 'components/LoadingIndicator';\r\nimport { mapFromFireStore } from 'store/firebase/utils';\r\nimport useAuth from '../useAuth';\r\nimport useRoles from '../useRoles';\r\n\r\nconst NotFound = () => <Typography>There are no users.</Typography>;\r\n\r\nconst useWatchCustomers = () => {\r\n\tconst { userId } = useAuth();\r\n\tconst { isDesignatedSalesperson } = useRoles();\r\n\tconsole.log(userId);\r\n\r\n\t/** @see https://react-redux-firebase.com/docs/queries.html#types-of-queries */\r\n\tuseFirestoreConnect({\r\n\t\tcollection: 'customers',\r\n\t\t// orderBy: ['firstName'],\r\n\t\t// owner can see everyone\r\n\t\t// designated salesperson will have his customers linked\r\n\t\t...(isDesignatedSalesperson && {\r\n\t\t\twhere: ['designatedSalespersonId', '==', userId],\r\n\t\t}),\r\n\t});\r\n\tconst customersFromFirestore = useSelector(\r\n\t\tstate => state.firestore.data.customers\r\n\t);\r\n\r\n\tconst pending = !isLoaded(customersFromFirestore) && (\r\n\t\t<LoadingIndicator size=\"xlarge\" fullWidth />\r\n\t);\r\n\tconst error = isEmpty(customersFromFirestore) && <NotFound key={-2} />;\r\n\r\n\tconst customers =\r\n\t\t(customersFromFirestore &&\r\n\t\t\tObject.keys(customersFromFirestore)\r\n\t\t\t\t.map(key => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...customersFromFirestore[key],\r\n\t\t\t\t\t\tid: key,\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t\t.map(mapFromFireStore())) ||\r\n\t\t[];\r\n\r\n\treturn {\r\n\t\tcustomers,\r\n\t\tpending,\r\n\t\terror,\r\n\t};\r\n};\r\n\r\nexport default useWatchCustomers;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n\tdisplayTextDialog,\r\n\tdisplayComponentDialog,\r\n\tdisplayConfirmDialog,\r\n\tdisplayHtmlDialog,\r\n\thideDialog,\r\n\tdisplayFormDialog,\r\n\tsetDialogProps,\r\n} from 'store/redux/reducers/dialog/actions';\r\nimport LoadingIndicator from 'components/LoadingIndicator';\r\nimport ContainerWithCenteredItems from 'components/ContainerWithCenteredItems';\r\nimport { getErrorMessageFromFetch } from 'utils';\r\n\r\nconst useDialogProvider = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst openTextDialog = useCallback(\r\n\t\t(title, content, options = {}) =>\r\n\t\t\tdispatch(displayTextDialog(title, content, options)),\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\tconst openComponentDialog = useCallback(\r\n\t\t(title, content, options = {}) =>\r\n\t\t\tdispatch(displayComponentDialog(title, content, options)),\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\tconst openHtmlDialog = useCallback(\r\n\t\t(title, content, options = {}) =>\r\n\t\t\tdispatch(displayHtmlDialog(title, content, options)),\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\tconst openFormDialog = useCallback(\r\n\t\t(title, formProps, options = {}) =>\r\n\t\t\tdispatch(displayFormDialog(title, formProps, options)),\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\tconst openConfirmDialog = useCallback(\r\n\t\t(\r\n\t\t\ttitle,\r\n\t\t\tcallback,\r\n\t\t\tonError = null,\r\n\t\t\tconfirmText = 'Yes',\r\n\t\t\tcancelText = 'No',\r\n\t\t\trest = {}\r\n\t\t) =>\r\n\t\t\tdispatch(\r\n\t\t\t\tdisplayConfirmDialog(\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tcallback,\r\n\t\t\t\t\tonError,\r\n\t\t\t\t\tconfirmText,\r\n\t\t\t\t\tcancelText,\r\n\t\t\t\t\trest\r\n\t\t\t\t)\r\n\t\t\t),\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\tconst openLoadingDialog = useCallback(\r\n\t\tasync (successCalback = null) => {\r\n\t\t\topenComponentDialog(\r\n\t\t\t\t'Loading...',\r\n\t\t\t\t<ContainerWithCenteredItems>\r\n\t\t\t\t\t<LoadingIndicator size=\"large\" />\r\n\t\t\t\t</ContainerWithCenteredItems>\r\n\t\t\t);\r\n\t\t\ttry {\r\n\t\t\t\tawait successCalback?.();\r\n\t\t\t} catch (err) {\r\n\t\t\t\topenTextDialog(getErrorMessageFromFetch(err));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[openComponentDialog, openTextDialog]\r\n\t);\r\n\r\n\tconst getCallbackMethod = useCallback(\r\n\t\ttype => {\r\n\t\t\tlet cb = openTextDialog;\r\n\t\t\tif (type === 'html') cb = openHtmlDialog;\r\n\t\t\telse if (type === 'component') cb = openComponentDialog;\r\n\t\t\treturn cb;\r\n\t\t},\r\n\t\t[openComponentDialog, openHtmlDialog, openTextDialog]\r\n\t);\r\n\r\n\t// utils\r\n\r\n\tconst displayError = useCallback(\r\n\t\t(title = 'Error', content = '', type = 'text') => {\r\n\t\t\tgetCallbackMethod(type)(title, content);\r\n\t\t},\r\n\t\t[getCallbackMethod]\r\n\t);\r\n\r\n\tconst displaySuccess = useCallback(\r\n\t\t(title = 'Success', content = '', type = 'text') => {\r\n\t\t\tgetCallbackMethod(type)(title, content);\r\n\t\t},\r\n\t\t[getCallbackMethod]\r\n\t);\r\n\r\n\tconst closeDialog = useCallback(() => dispatch(hideDialog()), [dispatch]);\r\n\r\n\tconst setPending = useCallback(() => {\r\n\t\tdispatch(setDialogProps({ pending: true }));\r\n\t}, [dispatch]);\r\n\r\n\treturn {\r\n\t\topenTextDialog,\r\n\t\topenComponentDialog,\r\n\t\topenHtmlDialog,\r\n\t\topenFormDialog,\r\n\t\topenConfirmDialog,\r\n\t\topenLoadingDialog,\r\n\t\tdisplayError,\r\n\t\tdisplaySuccess,\r\n\t\tcloseDialog,\r\n\t\tsetPending,\r\n\t};\r\n};\r\n\r\nexport default useDialogProvider;\r\n","import PageTitle from 'components/page-components/PageTitle';\r\nimport PageContainer from 'components/page-components/PageContainer';\r\nimport Spacer from 'components/Spacer';\r\nimport { AddIcon, CustomersIcon } from 'icons';\r\nimport Autocomplete from 'components/Autocomplete';\r\nimport useWatchCustomers from 'store/firebase/hooks/customers/useWatchCustomers';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { BASE_PATH } from 'routes/constants';\r\nimport TooltipButton from 'components/TooltipButton';\r\nimport { Grid } from '@material-ui/core';\r\nimport useCustomer from 'store/firebase/hooks/customers/useCustomer';\r\nimport useDialogProvider from 'store/redux/hooks/useDialogProvider';\r\nimport CustomerInfo from 'containers/VehicleSelector/CustomerInfo';\r\n\r\nconst Customers = () => {\r\n\tconst { error, pending, customers } = useWatchCustomers();\r\n\tconst { createCustomer } = useCustomer();\r\n\tconst { openComponentDialog, closeDialog } = useDialogProvider();\r\n\r\n\tconst customerList = customers.map(({ firstName, lastName, id }) => ({\r\n\t\ttitle: `${firstName} ${lastName}`,\r\n\t\tvalue: id,\r\n\t}));\r\n\r\n\tconst { push } = useHistory();\r\n\r\n\tconst goToCustomer = id => {\r\n\t\tpush(`${BASE_PATH}/customers/${id}`);\r\n\t};\r\n\r\n\tconst onCustomerSelect = (_, { value }) => {\r\n\t\tgoToCustomer(value);\r\n\t};\r\n\r\n\tconst openCustomerAddDialog = ({\r\n\t\tonSubmit,\r\n\t\tprops = {},\r\n\t\tisPending = false,\r\n\t}) => {\r\n\t\topenComponentDialog(\r\n\t\t\t'Add new customer',\r\n\t\t\t<CustomerInfo\r\n\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\tpending={isPending}\r\n\t\t\t\tsubmitText=\"Add\"\r\n\t\t\t\t{...props}\r\n\t\t\t/>,\r\n\t\t\t{ pending: isPending }\r\n\t\t);\r\n\t};\r\n\r\n\tconst onCustomerAddSubmit = async props => {\r\n\t\topenCustomerAddDialog({ props, isPending: true });\r\n\t\tconst id = await createCustomer(props);\r\n\t\tgoToCustomer(id);\r\n\t\tcloseDialog();\r\n\t};\r\n\r\n\tconst onCustomerAdd = () => {\r\n\t\topenCustomerAddDialog({ onSubmit: onCustomerAddSubmit });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<PageContainer>\r\n\t\t\t<PageTitle icon={CustomersIcon}>Customers</PageTitle>\r\n\t\t\t<Spacer direction=\"bottom\" spacing=\"15\" />\r\n\t\t\t{pending || error || (\r\n\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\r\n\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\toptions={customerList}\r\n\t\t\t\t\t\tonChange={onCustomerSelect}\r\n\t\t\t\t\t\tlabel=\"Customers\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t<TooltipButton\r\n\t\t\t\t\t\ttooltip=\"Add new customer\"\r\n\t\t\t\t\t\tonClick={onCustomerAdd}\r\n\t\t\t\t\t\ticon={AddIcon}\r\n\t\t\t\t\t\tbg=\"primary\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t</PageContainer>\r\n\t);\r\n};\r\n\r\nexport default Customers;\r\n","import { bool, node } from 'prop-types';\r\n\r\nconst propTypes = {\r\n\tchildren: node,\r\n\thorizontal: bool,\r\n\tvertical: bool,\r\n};\r\n\r\nconst defaultProps = {\r\n\tchildren: '',\r\n\thorizontal: true,\r\n\tvertical: false,\r\n};\r\n\r\nexport { propTypes, defaultProps };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { propTypes, defaultProps } from './types';\r\n\r\nconst StyledGrid = styled(Grid)`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\t${({ $horizontal, $vertical }) => `\r\n\t\t${$horizontal && 'justify-content: center;'}\r\n\t\t${$vertical && 'height: 100%; align-items: center;'}\r\n\t`}\r\n`;\r\n\r\n/**\r\n * Centered Grid\r\n *\r\n * @component\r\n * @param {import('@material-ui/core').GridProps|import('react').HtmlHTMLAttributes}\r\n */\r\nconst ContainerWithCenteredItems = ({\r\n\tchildren,\r\n\thorizontal,\r\n\tvertical,\r\n\t...rest\r\n}) => (\r\n\t<StyledGrid $horizontal={horizontal} $vertical={vertical} {...rest}>\r\n\t\t{children}\r\n\t</StyledGrid>\r\n);\r\n\r\nContainerWithCenteredItems.propTypes = propTypes;\r\nContainerWithCenteredItems.defaultProps = defaultProps;\r\n\r\nexport default ContainerWithCenteredItems;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledWrapper = styled.span`\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\t${({ theme, $direction, $spacing }) => `\r\n\t\tmargin-${$direction}: ${theme.spacing($spacing)}px;\r\n\t`}\r\n`;\r\n\r\nexport default StyledWrapper;\r\n","import { direction, numberOrString } from 'components/types';\r\n\r\nconst propTypes = {\r\n\t/**\r\n\t * - Which direction do you want to apply margin to\r\n\t */\r\n\tdirection: direction.isRequired,\r\n\t/**\r\n\t * - The amount is passed in to the spacing method of Mui.\r\n\t * - By default 1-unit-spacing = 8px\r\n\t */\r\n\tspacing: numberOrString,\r\n};\r\nconst defaultProps = {\r\n\tspacing: 1,\r\n};\r\n\r\nexport { propTypes, defaultProps };\r\n","import React from 'react';\r\nimport StyledWrapper from './StyledWrapper';\r\nimport { defaultProps, propTypes } from './types';\r\n\r\n/**\r\n * Element that adds margin to the given direction based on the\r\n * spacing amount. The amount is passed in to the spacing method\r\n * of Mui. By default 1-unit-spacing = 8px\r\n *\r\n * @example\r\n * ```js\r\n * <Spacer direction=\"right\" spacing=\"5\" />\r\n * ```\r\n *\r\n * @component\r\n */\r\nconst Spacer = ({ direction, spacing }) => (\r\n\t<StyledWrapper\r\n\t\t$direction={direction}\r\n\t\t$spacing={\r\n\t\t\t(typeof spacing === 'string' && parseInt(spacing, 10)) || spacing\r\n\t\t}\r\n\t/>\r\n);\r\n\r\nSpacer.propTypes = propTypes;\r\nSpacer.defaultProps = defaultProps;\r\n\r\nexport default Spacer;\r\n","import { string, func } from 'prop-types';\r\n\r\nconst propTypes = {\r\n\tcolor: string,\r\n\tonColorChange: func.isRequired,\r\n};\r\n\r\nconst defaultProps = {\r\n\tcolor: '',\r\n};\r\n\r\nexport { propTypes, defaultProps };\r\n","import React, { forwardRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport Popover from 'components/Popover';\r\nimport { CheckboxIcon } from 'icons';\r\nimport TooltipButton from 'components/TooltipButton';\r\nimport { PRIMARY_COLOR, SECONDARY_COLOR } from 'theme';\r\nimport { propTypes, defaultProps } from './types';\r\n\r\nconst ColoredIcon = styled(CheckboxIcon)`\r\n\tmargin-left: -2px;\r\n\t${({ theme, $bg, $size }) =>\r\n\t\t($bg &&\r\n\t\t\t`\r\n\t\t\t\t// & .MuiSvgIcon-root {\r\n\r\n\t\t\t\t\tborder-radius: ${theme.shape.borderRadius}px;\r\n\t\t\t\t\twidth: ${$size}px;\r\n\t\t\t\t\theight: ${$size}px;\r\n\t\t\t\t\tfill: ${$bg} !important;\r\n\t\t\t\t\tcolor: ${$bg} !important;\r\n\t\t\t\t\tbackground-color: ${$bg} !important;\r\n\t\t\t\t// }\r\n\t\t`) ||\r\n\t\t''};\r\n`;\r\nconst ColorPicker = forwardRef(\r\n\t({ color, onColorChange, size = 20, ...rest }, ref) => {\r\n\t\tconst onClick = cb => {\r\n\t\t\tcb();\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<Popover\r\n\t\t\t\tbuttonComponent={\r\n\t\t\t\t\t<TooltipButton\r\n\t\t\t\t\t\ttooltip=\"Pick a color\"\r\n\t\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\t\ticon={<ColoredIcon $size={size} $bg={color} />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tcomponent={\r\n\t\t\t\t\t<TwitterPicker\r\n\t\t\t\t\t\tcolors={[\r\n\t\t\t\t\t\t\tPRIMARY_COLOR,\r\n\t\t\t\t\t\t\tSECONDARY_COLOR,\r\n\t\t\t\t\t\t\t'#f44336',\r\n\t\t\t\t\t\t\t'#ff9800',\r\n\t\t\t\t\t\t\t'#2196f3',\r\n\t\t\t\t\t\t\t'#4caf50',\r\n\r\n\t\t\t\t\t\t\t// '#FCB900',\r\n\t\t\t\t\t\t\t// '#7BDCB5',\r\n\t\t\t\t\t\t\t// '#00D084',\r\n\t\t\t\t\t\t\t// '#8ED1FC',\r\n\t\t\t\t\t\t\t// '#0693E3',\r\n\t\t\t\t\t\t\t// '#ABB8C3',\r\n\t\t\t\t\t\t\t// '#EB144C',\r\n\t\t\t\t\t\t\t// '#F78DA7',\r\n\t\t\t\t\t\t\t// '#9900EF',\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\tonChangeComplete={colors => onColorChange(colors.hex)}\r\n\t\t\t\t\t\t{...rest}\r\n\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tpassCallback\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nColorPicker.propTypes = propTypes;\r\nColorPicker.defaultProps = defaultProps;\r\n\r\nexport default ColorPicker;\r\n","import firebase from 'firebase/app';\r\n\r\nconst sortByFirebaseDate = (sort = 'desc') => (a, b) =>\r\n\t((sort === 'desc' && -1) || 1) *\r\n\t(a.updatedOn.seconds - b.updatedOn.seconds);\r\n\r\n// Can be resolved with const date = updatedOn.toDate();\r\n// const getDateFromFirebaseObject = obj => new Date(obj.seconds * 1000);\r\n\r\n/**\r\n * Stringifies objects before sending them to firebase\r\n * @param {Object} props Properties to be passed into the firebase request\r\n */\r\nconst toFirestore = props =>\r\n\tObject.keys(props).reduce((acc, key) => {\r\n\t\tconst value = props[key];\r\n\t\t// eslint-disable-next-line no-param-reassign\r\n\t\tacc[key] =\r\n\t\t\t// eslint-disable-next-line no-nested-ternary\r\n\t\t\tvalue === null\r\n\t\t\t\t? null\r\n\t\t\t\t: typeof value === 'object' && !(value instanceof Date)\r\n\t\t\t\t? JSON.stringify(value)\r\n\t\t\t\t: value;\r\n\t\treturn acc;\r\n\t}, {});\r\n\r\n/**\r\n * Parses stringified objects before passing them to the client\r\n * @param {Object} props Properties returned from the firebase request\r\n * @param {Array<String>} keys List of keys that need their value string parsed as JSON object\r\n */\r\nconst fromFirestore = (props, keys = []) =>\r\n\tObject.keys(props).reduce((acc, key) => {\r\n\t\tconst value = props[key];\r\n\t\t// eslint-disable-next-line no-param-reassign\r\n\t\tacc[key] =\r\n\t\t\t(keys.includes(key) && JSON.parse(value)) ||\r\n\t\t\t(value instanceof firebase.default.firestore.Timestamp &&\r\n\t\t\t\tvalue.toDate()) ||\r\n\t\t\tvalue;\r\n\t\treturn acc;\r\n\t}, {});\r\n\r\nconst mapFromFireStore = (keys = []) => props => fromFirestore(props, keys);\r\n\r\n// https://stackoverflow.com/questions/400212/how-do-i-copy-to-the-clipboard-in-javascript\r\nconst fallbackCopyTextToClipboard = (\r\n\ttext,\r\n\tpostSuccess = null,\r\n\tpostFailure = null\r\n) => {\r\n\tconst textArea = document.createElement('textarea');\r\n\ttextArea.value = text;\r\n\r\n\t// Avoid scrolling to bottom\r\n\ttextArea.style.top = '0';\r\n\ttextArea.style.left = '0';\r\n\ttextArea.style.position = 'fixed';\r\n\r\n\tdocument.body.appendChild(textArea);\r\n\ttextArea.focus();\r\n\ttextArea.select();\r\n\r\n\ttry {\r\n\t\tconst successful = document.execCommand('copy');\r\n\t\tif (successful) {\r\n\t\t\tpostSuccess?.();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tpostFailure?.();\r\n\t} catch (err) {\r\n\t\tpostFailure?.();\r\n\t}\r\n\r\n\tdocument.body.removeChild(textArea);\r\n};\r\n\r\n// https://stackoverflow.com/questions/400212/how-do-i-copy-to-the-clipboard-in-javascript\r\nconst copyToClipboard = (text, postSuccess = null, postFailure = null) => {\r\n\tif (!navigator.clipboard) {\r\n\t\tfallbackCopyTextToClipboard(text, postSuccess, postFailure);\r\n\t\treturn;\r\n\t}\r\n\tnavigator.clipboard.writeText(text).then(\r\n\t\t() => {\r\n\t\t\tpostSuccess?.();\r\n\t\t},\r\n\t\t() => {\r\n\t\t\tpostFailure?.();\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport {\r\n\tsortByFirebaseDate,\r\n\t// getDateFromFirebaseObject,\r\n\ttoFirestore,\r\n\tfromFirestore,\r\n\tmapFromFireStore,\r\n\tcopyToClipboard,\r\n};\r\n","import { Paper } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nconst PageContainer = styled(Paper)`\r\n\t${({ theme }) => `\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: ${theme.spacing(2)}px;\r\n\t\ttext-align: center;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: flex-start;\r\n\t\talign-items: center;\r\n\t\toverflow-y: auto;\r\n\t\toverflow-x: hidden;\r\n\t\t${theme.breakpoints.up('md')} {\r\n\t\t\tjustify-content: center;\r\n\t\t\tpadding: ${theme.spacing(5)}px;\r\n\t\t}\r\n\t`}\r\n`;\r\n\r\nexport default PageContainer;\r\n","import styled from 'styled-components';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst Text = styled(TextField)`\r\n\t${({ theme }) => `\r\n\t\tmargin-bottom: ${theme.spacing(2)}px;\r\n\t`}\r\n`;\r\n\r\nexport default Text;\r\n","import React, { forwardRef } from 'react';\r\n\r\nimport Text from './Text';\r\n\r\nconst Password = forwardRef((props, ref) => (\r\n\t<Text type=\"password\" {...props} ref={ref} />\r\n));\r\n\r\nexport default Password;\r\n","import React, { forwardRef } from 'react';\r\nimport { FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\r\nimport { string } from 'prop-types';\r\n\r\nconst Checkbox = forwardRef(({ label, ...props }, ref) => (\r\n\t<FormControlLabel\r\n\t\tcontrol={<MuiCheckbox color=\"primary\" {...props} ref={ref} />}\r\n\t\tlabel={label}\r\n\t/>\r\n));\r\n\r\nCheckbox.propTypes = {\r\n\tlabel: string.isRequired,\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { forwardRef } from 'react';\r\nimport { FormControlLabel } from '@material-ui/core';\r\nimport { string } from 'prop-types';\r\n\r\nimport ColorPickerComponent from 'components/ColorPicker';\r\n\r\nconst ColorPicker = forwardRef(({ label, ...props }, ref) => (\r\n\t<FormControlLabel\r\n\t\tcontrol={<ColorPickerComponent {...props} ref={ref} />}\r\n\t\tlabel={label}\r\n\t/>\r\n));\r\n\r\nColorPicker.propTypes = {\r\n\tlabel: string.isRequired,\r\n};\r\n\r\nexport default ColorPicker;\r\n","import Text from './Text';\r\nimport Password from './Password';\r\nimport Checkbox from './Checkbox';\r\nimport ColorPicker from './ColorPicker';\r\n\r\nconst FORM_COMPONENT_TYPES = {\r\n\tTEXT: 'text',\r\n\tPASSWORD: 'password',\r\n\tCHECKBOX: 'checkbox',\r\n\tCOLOR_PICKER: 'colorPicker',\r\n};\r\n\r\nconst { TEXT, PASSWORD, CHECKBOX, COLOR_PICKER } = FORM_COMPONENT_TYPES;\r\n\r\nconst COMPONENTS = {\r\n\t[TEXT]: Text,\r\n\t[PASSWORD]: Password,\r\n\t[CHECKBOX]: Checkbox,\r\n\t[COLOR_PICKER]: ColorPicker,\r\n};\r\n\r\nexport { FORM_COMPONENT_TYPES };\r\nexport default COMPONENTS;\r\n","import React, { useRef, useEffect, createRef } from 'react';\r\nimport { FormGroup, Grid } from '@material-ui/core';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport ContainerWithCenteredItems from 'components/ContainerWithCenteredItems';\r\nimport TooltipButton from 'components/TooltipButton';\r\nimport Spacer from 'components/Spacer';\r\nimport COMPONENTS, { FORM_COMPONENT_TYPES } from './components';\r\n\r\n// const FormItem = ({}) => {\r\n// \tconst inputRef = useRef();\r\n// };\r\n\r\n// TODO: Keep the form simple for now\r\n/* eslint-disable react/prop-types */\r\nconst Form = ({\r\n\titems,\r\n\tschema,\r\n\tonSubmit,\r\n\tdefaultValues,\r\n\tpending = false,\r\n\tsubmitText = 'Submit',\r\n\tignoreAutocomplete: ignoreAutocompleteByDefault = false,\r\n\t...rest\r\n}) => {\r\n\tconst { control, handleSubmit, errors } = useForm({\r\n\t\tresolver: yupResolver(schema),\r\n\t\tdefaultValues,\r\n\t});\r\n\r\n\t// For auto-focusing on the first error\r\n\tconst inputRefs = useRef({});\r\n\tuseEffect(() => {\r\n\t\titems.forEach(({ name }) => {\r\n\t\t\tinputRefs.current[name] = createRef();\r\n\t\t});\r\n\t}, [items]);\r\n\t// }, [items]);\r\n\tconst onInvalid = err => {\r\n\t\tconst errorKeys = Object.keys(err);\r\n\t\tif (errorKeys.length) {\r\n\t\t\tconst refName = errorKeys[0];\r\n\t\t\tif (inputRefs.current?.[refName]?.current) {\r\n\t\t\t\tinputRefs.current[refName].current.focus();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// Give just enough time for refs to load\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tinputRefs.current?.[refName]?.current?.focus();\r\n\t\t\t}, 100);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getRequiredField = fieldName => {\r\n\t\tconst props = {\r\n\t\t\trequired: true,\r\n\t\t\trules: { required: true },\r\n\t\t};\r\n\r\n\t\tconst field = errors[fieldName];\r\n\r\n\t\tif (field) {\r\n\t\t\tprops.helperText = `${field.message}`;\r\n\t\t\tprops.error = true;\r\n\t\t}\r\n\r\n\t\treturn props;\r\n\t};\r\n\r\n\tuseEffect(() => {});\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tonSubmit={handleSubmit(onSubmit, onInvalid)}\r\n\t\t\tnoValidate\r\n\t\t\tautoComplete=\"off\"\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t<Spacer direction=\"bottom\" spacing=\"2\" />\r\n\t\t\t{items.map(\r\n\t\t\t\t(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\trequired = false,\r\n\t\t\t\t\t\tdefaultValue = '',\r\n\t\t\t\t\t\tvariant = 'outlined',\r\n\t\t\t\t\t\t// defaults to what's given in the form\r\n\t\t\t\t\t\tignoreAutocomplete = ignoreAutocompleteByDefault,\r\n\t\t\t\t\t\t...restFieldProps\r\n\t\t\t\t\t},\r\n\t\t\t\t\tind\r\n\t\t\t\t) => {\r\n\t\t\t\t\tconst As = COMPONENTS[type];\r\n\t\t\t\t\tconst ref = inputRefs.current[name];\r\n\r\n\t\t\t\t\tconst props = {};\r\n\r\n\t\t\t\t\t// NOTE: rhfProps contains: onChange, onBlur and value\r\n\t\t\t\t\tif (type === FORM_COMPONENT_TYPES.CHECKBOX) {\r\n\t\t\t\t\t\tprops.render = rhfProps => (\r\n\t\t\t\t\t\t\t<As\r\n\t\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\t\trhfProps.onChange(e.target.checked)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// eslint-disable-next-line react/destructuring-assignment\r\n\t\t\t\t\t\t\t\tchecked={rhfProps.value}\r\n\t\t\t\t\t\t\t\tlabel={label}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else if (type === FORM_COMPONENT_TYPES.COLOR_PICKER) {\r\n\t\t\t\t\t\tprops.render = ({ value, onChange }) => (\r\n\t\t\t\t\t\t\t<As\r\n\t\t\t\t\t\t\t\tcolor={value}\r\n\t\t\t\t\t\t\t\tonColorChange={onChange}\r\n\t\t\t\t\t\t\t\tlabel={label}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tprops.as = (\r\n\t\t\t\t\t\t\t<As\r\n\t\t\t\t\t\t\t\t{...(ind === 0 && { autoFocus: true })}\r\n\t\t\t\t\t\t\t\tinputRef={ref}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst _props = {\r\n\t\t\t\t\t\tcontrol,\r\n\t\t\t\t\t\tdefaultValue,\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\t...(variant && { variant }),\r\n\t\t\t\t\t\t...(required && getRequiredField(name)),\r\n\t\t\t\t\t\t...props,\r\n\t\t\t\t\t\t...restFieldProps,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// ignores autocomplete by setting the input prop\r\n\t\t\t\t\t// if the form has ignoreAutocomplete=true, for fields\r\n\t\t\t\t\t// that don't explicitly set it to true will also be\r\n\t\t\t\t\t// ignored. In order for this to work, we need to add\r\n\t\t\t\t\t// an input element that does not have autocomplete\r\n\t\t\t\t\t// property assigned. When all the form elements have\r\n\t\t\t\t\t// it set, autocomplete popup still appears. Check\r\n\t\t\t\t\t// the hidden form element on the bottom\r\n\t\t\t\t\tif (ignoreAutocomplete) {\r\n\t\t\t\t\t\t_props.inputProps = {\r\n\t\t\t\t\t\t\t...(props.inputProps || {}),\r\n\t\t\t\t\t\t\tautoComplete: 'ignore',\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<FormGroup key={name}>\r\n\t\t\t\t\t\t\t<Controller {..._props} />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t)}\r\n\t\t\t{/* required-for-autocomplete-block */}\r\n\t\t\t<input hidden />\r\n\t\t\t<Spacer direction=\"bottom\" spacing=\"2\" />\r\n\t\t\t<ContainerWithCenteredItems container>\r\n\t\t\t\t<Grid container justify=\"center\" item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t<TooltipButton\r\n\t\t\t\t\t\ttooltip={submitText}\r\n\t\t\t\t\t\ttext={submitText}\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tbg=\"primary\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tloading={pending}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</ContainerWithCenteredItems>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","import { Typography } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nconst CenteredTypography = styled(Typography)`\r\n\talign-items: center;\r\n\tdisplay: inline-flex;\r\n`;\r\n\r\nexport default CenteredTypography;\r\n","import CenteredTypography from 'components/CenteredTypography';\r\nimport { cloneElement } from 'react';\r\nimport { getElementFromElementOrType } from 'utils/react';\r\n\r\nconst PageTitle = ({ icon, children, subtitle = false, ...rest }) => {\r\n\tlet variant = 'h2';\r\n\tlet fontSize = 70;\r\n\r\n\tif (subtitle) {\r\n\t\tvariant = 'h5';\r\n\t\tfontSize = 50;\r\n\t}\r\n\treturn (\r\n\t\t<CenteredTypography component=\"h1\" variant={variant} {...rest}>\r\n\t\t\t{cloneElement(getElementFromElementOrType(icon), {\r\n\t\t\t\tstyle: { fontSize },\r\n\t\t\t})}\r\n\t\t\t&nbsp;{children}\r\n\t\t</CenteredTypography>\r\n\t);\r\n};\r\n\r\nexport default PageTitle;\r\n","import { string, shape, arrayOf, node, any } from 'prop-types';\r\n\r\nimport { elementOrType, icon } from 'components/types';\r\n\r\nconst verticalTabsPropTypes = {\r\n\tlist: arrayOf(\r\n\t\tshape({\r\n\t\t\tlabel: string.isRequired,\r\n\t\t\tpanel: elementOrType.isRequired,\r\n\t\t\ticon,\r\n\t\t})\r\n\t),\r\n};\r\n\r\nconst verticalTabsDefaultProps = {\r\n\tlist: [],\r\n};\r\n\r\nconst tabPanelPropTypes = {\r\n\tchildren: node,\r\n\tindex: any.isRequired,\r\n\tvalue: any.isRequired,\r\n};\r\n\r\nconst tabPanelDefaultProps = {\r\n\tchildren: null,\r\n};\r\n\r\nexport {\r\n\tverticalTabsPropTypes,\r\n\tverticalTabsDefaultProps,\r\n\ttabPanelPropTypes,\r\n\ttabPanelDefaultProps,\r\n};\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nimport { tabPanelPropTypes, tabPanelDefaultProps } from './types';\r\n\r\nconst Wrapper = styled.div`\r\n\twidth: 100%;\r\n\toverflow: auto;\r\n`;\r\n\r\nconst TabPanel = ({ children, value, index, ...other }) => (\r\n\t<Wrapper\r\n\t\trole=\"tabpanel\"\r\n\t\thidden={value !== index}\r\n\t\tid={`vertical-tabpanel-${index}`}\r\n\t\taria-labelledby={`vertical-tab-${index}`}\r\n\t\t{...other}\r\n\t>\r\n\t\t{value === index && <Box p={3}>{children}</Box>}\r\n\t</Wrapper>\r\n);\r\n\r\nTabPanel.propTypes = tabPanelPropTypes;\r\nTabPanel.defaultProps = tabPanelDefaultProps;\r\n\r\nexport default TabPanel;\r\n","import React from 'react';\r\nimport { Tabs, Tab } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport { getElementFromElementOrType } from 'utils/react';\r\nimport { verticalTabsPropTypes, verticalTabsDefaultProps } from './types';\r\n\r\nimport TabPanel from './TabPanel';\r\n\r\nconst a11yProps = index => ({\r\n\tid: `vertical-tab-${index}`,\r\n\t'aria-controls': `vertical-tabpanel-${index}`,\r\n});\r\n\r\nconst Wrapper = styled.div`\r\n\tflex-grow: 1;\r\n\tdisplay: flex;\r\n\theight: 100%;\r\n\t${({ theme }) => `\r\n\t\tbackground-color: ${theme.palette.background.level1};\r\n\t`}\r\n`;\r\n\r\nconst StyledTabs = styled(Tabs)`\r\n\toverflow: initial;\r\n\t${({ theme }) => `\r\n\t\tborder-right: 1px solid ${theme.palette.divider};\r\n\t`}\r\n`;\r\n\r\n/**\r\n * @component\r\n *\r\n * @example\r\n * ```js\r\n * \tconst list = [\r\n * \t\t\t{ label: 'Slideshows', panel: <Slideshows />, icon: LayerIcon },\r\n * \t\t\t{ label: 'Analytics', panel: <Analytics />, icon: AnalyticsIcon },\r\n * \t\t\t{ label: 'Resources', panel: <Resources />, icon: BookmarksIcon },\r\n * \t];\r\n * ```\r\n */\r\nconst VerticalTabs = ({ list, ...rest }) => {\r\n\tconst [value, setValue] = React.useState(0);\r\n\r\n\tconst handleChange = (event, newValue) => {\r\n\t\tsetValue(newValue);\r\n\t};\r\n\r\n\tconst tabs = [];\r\n\tconst panels = [];\r\n\r\n\tlist.forEach(({ label, panel, icon }, ind) => {\r\n\t\ttabs.push(\r\n\t\t\t<Tab\r\n\t\t\t\tkey={label}\r\n\t\t\t\ticon={getElementFromElementOrType(icon)}\r\n\t\t\t\tlabel={label}\r\n\t\t\t\t{...a11yProps(ind)}\r\n\t\t\t/>\r\n\t\t);\r\n\t\tpanels.push(\r\n\t\t\t<TabPanel key={label} value={value} index={ind}>\r\n\t\t\t\t{getElementFromElementOrType(panel)}\r\n\t\t\t</TabPanel>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Wrapper {...rest}>\r\n\t\t\t<StyledTabs\r\n\t\t\t\torientation=\"vertical\"\r\n\t\t\t\tvariant=\"scrollable\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\taria-label=\"Vertical tabs\"\r\n\t\t\t\tindicatorColor=\"secondary\"\r\n\t\t\t\ttextColor=\"secondary\"\r\n\t\t\t>\r\n\t\t\t\t{tabs}\r\n\t\t\t</StyledTabs>\r\n\t\t\t{panels}\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nVerticalTabs.propTypes = verticalTabsPropTypes;\r\nVerticalTabs.defaultProps = verticalTabsDefaultProps;\r\n\r\nexport default VerticalTabs;\r\n","import styled from 'styled-components';\r\n\r\nconst PanelContainer = styled.div`\r\n\tbox-sizing: border-box;\r\n\tdisplay: none;\r\n\twidth: 100%;\r\n\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-items: center;\r\n\tflex-wrap: wrap;\r\n\talign-content: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport default PanelContainer;\r\n","import Form, { FORM_COMPONENT_TYPES } from 'components/Form';\r\nimport { PanelContainer } from 'components/VerticalTabs';\r\nimport * as yup from 'yup';\r\n\r\n/** @see https://stackoverflow.com/a/53210158/13161405 */\r\nconst PHONE_REGEX = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst customerSchema = yup.object().shape({\r\n\tfirstName: yup.string().label('First Name').required(),\r\n\tlastName: yup.string().label('Last Name').required(),\r\n\taddress: yup.string().label('Address').required(),\r\n\tphoneNumber: yup\r\n\t\t.string()\r\n\t\t.label('Phone Number')\r\n\t\t.matches(PHONE_REGEX, 'Phone number is not valid')\r\n\t\t.required(),\r\n});\r\n\r\nconst CustomerInfo = ({\r\n\tfirstName,\r\n\tlastName,\r\n\taddress,\r\n\tphoneNumber,\r\n\tonSubmit,\r\n\tsubmitText,\r\n\tpending = false,\r\n}) => {\r\n\treturn (\r\n\t\t<PanelContainer>\r\n\t\t\t<Form\r\n\t\t\t\tignoreAutocomplete\r\n\t\t\t\tstyle={{ width: '80%', maxWidth: 400 }}\r\n\t\t\t\titems={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: FORM_COMPONENT_TYPES.TEXT,\r\n\t\t\t\t\t\tlabel: 'First Name',\r\n\t\t\t\t\t\tname: 'firstName',\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tdefaultValue: firstName,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: FORM_COMPONENT_TYPES.TEXT,\r\n\t\t\t\t\t\tlabel: 'Last Name',\r\n\t\t\t\t\t\tname: 'lastName',\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tdefaultValue: lastName,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: FORM_COMPONENT_TYPES.TEXT,\r\n\t\t\t\t\t\tlabel: 'Address',\r\n\t\t\t\t\t\tname: 'address',\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tdefaultValue: address,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: FORM_COMPONENT_TYPES.TEXT,\r\n\t\t\t\t\t\tlabel: 'Phone Number',\r\n\t\t\t\t\t\tname: 'phoneNumber',\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tdefaultValue: phoneNumber,\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\tschema={customerSchema}\r\n\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\tpending={pending}\r\n\t\t\t\tsubmitText={submitText}\r\n\t\t\t/>\r\n\t\t</PanelContainer>\r\n\t);\r\n};\r\n\r\nexport default CustomerInfo;\r\n","import { useFirestore } from 'react-redux-firebase';\r\nimport useNotificationProvider from 'store/redux/hooks/useNotificationProvider';\r\nimport useAuth from 'store/firebase/hooks/useAuth';\r\nimport { toFirestore } from 'store/firebase/utils';\r\n\r\nconst useCustomer = id => {\r\n\tconst { notifyError } = useNotificationProvider();\r\n\tconst { userId: designatedSalespersonId } = useAuth();\r\n\r\n\tconst firestore = useFirestore({\r\n\t\tcollection: 'customers',\r\n\t\tdoc: id,\r\n\t});\r\n\r\n\tconst createCustomer = async props => {\r\n\t\ttry {\r\n\t\t\tconst date = new Date();\r\n\t\t\tconst { id: newId } = await firestore.add(\r\n\t\t\t\t'customers',\r\n\t\t\t\ttoFirestore({\r\n\t\t\t\t\t...props,\r\n\t\t\t\t\tcreatedOn: date,\r\n\t\t\t\t\tupdatedOn: date,\r\n\t\t\t\t\tvehicleSelection: {\r\n\t\t\t\t\t\tvehicleModel: null,\r\n\t\t\t\t\t\texteriorColor: null,\r\n\t\t\t\t\t\tinteriorColor: null,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdesignatedSalespersonId,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\treturn newId;\r\n\t\t} catch (err) {\r\n\t\t\tnotifyError(err);\r\n\t\t\treturn '';\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateCustomer = async props => {\r\n\t\ttry {\r\n\t\t\tawait firestore.update(`customers/${id}`, toFirestore(props));\r\n\t\t} catch (err) {\r\n\t\t\tnotifyError(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst deleteCustomer = async (customerId = id) => {\r\n\t\ttry {\r\n\t\t\tawait firestore.delete(`customers/${customerId}`);\r\n\t\t} catch (err) {\r\n\t\t\tnotifyError(err);\r\n\t\t}\r\n\t};\r\n\r\n\treturn {\r\n\t\tcreateCustomer,\r\n\t\tupdateCustomer,\r\n\t\tdeleteCustomer,\r\n\t};\r\n};\r\n\r\nexport default useCustomer;\r\n"],"sourceRoot":""}