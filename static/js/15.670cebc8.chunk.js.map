{"version":3,"sources":["../node_modules/@material-ui/core/esm/Switch/Switch.js","../node_modules/@material-ui/core/esm/colors/yellow.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/isValueSelected.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/ToggleButtonGroup.js","../node_modules/@material-ui/lab/esm/ToggleButton/ToggleButton.js","components/Toggle/types.js","components/Toggle/Toggle.js","containers/ThemeToggle/ThemeToggle.js","containers/ThemeColorPicker/ThemeColorPicker.js","containers/ThemeColorPicker/types.js","routes/pages/Profile.js","components/ContainerWithCenteredItems/types.js","components/ContainerWithCenteredItems/ContainerWithCenteredItems.js","components/Spacer/StyledWrapper.js","components/Spacer/types.js","components/Spacer/Spacer.js","components/ColorPicker/types.js","components/ColorPicker/ColorPicker.js","components/PaperContainerWithSpacing/types.js","components/PaperContainerWithSpacing/PaperContainerWithSpacing.js","components/List/Lazy.js","components/List/constants.js"],"names":["Switch","React","props","ref","classes","className","_props$color","color","_props$edge","edge","_props$size","size","other","_objectWithoutProperties","icon","thumb","clsx","root","edgeStart","edgeEnd","concat","capitalize","SwitchBase","_extends","type","checkedIcon","switchBase","input","checked","disabled","track","withStyles","theme","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","marginLeft","marginRight","top","left","palette","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","name","yellow","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","isValueSelected","value","candidate","undefined","Array","isArray","indexOf","ToggleButtonGroup","children","_props$exclusive","exclusive","onChange","_props$orientation","orientation","handleChange","event","buttonValue","newValue","index","slice","splice","handleExclusiveChange","role","vertical","map","child","grouped","selected","shape","flexDirection","groupedHorizontal","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","marginTop","borderTop","ToggleButton","_props$disabled","_props$disableFocusRi","disableFocusRipple","onClick","ButtonBase","focusRipple","isDefaultPrevented","label","typography","button","border","active","textDecoration","text","alignItems","justifyContent","fontSize","pxToRem","sizeLarge","toggleOptionItemType","any","isRequired","string","bool","toggleOptionsType","arrayOf","func","Toggle","options","rest","_","doesNotExist","elm","getElementFromElementOrType","Spacer","direction","defaultProps","ThemeToggle","useProfile","updateTheme","style","indigo","ThemeColorPicker","primaryColor","secondaryColor","updatePrimaryColor","updateSecondaryColor","isPrimary","ColorPicker","onColorChange","v","PREFERENCE_LIST","itemTypes","SECTION_TITLE_WITH_DIVIDER","primaryText","ThemeIcon","secondaryAction","PaletteIcon","SPACER","secondaryText","AnimationIcon","getPreferenceList","isDevUser","Profile","useRoles","ContainerWithCenteredItems","horizontal","PaperContainerWithSpacing","Lazy","list","node","StyledGrid","styled","Grid","$horizontal","$vertical","StyledWrapper","span","$direction","$spacing","spacing","numberOrString","parseInt","ColoredIcon","CheckboxIcon","$bg","$size","forwardRef","Popover","buttonComponent","TooltipButton","tooltip","cb","component","colors","PRIMARY_COLOR","SECONDARY_COLOR","onChangeComplete","hex","passCallback","object","PaperWrapper","Paper","background","paper","NoBgWrapper","div","containerProps","paperProps","noBg","boxProps","useState","isHovering","setIsHovering","Box","py","px","textAlign","elevation","onMouseEnter","onMouseLeave","loadable","SECTION_TITLE","DIVIDER"],"mappings":"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","file":"static/js/15.670cebc8.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","var yellow = {\n  50: '#fffde7',\n  100: '#fff9c4',\n  200: '#fff59d',\n  300: '#fff176',\n  400: '#ffee58',\n  500: '#ffeb3b',\n  600: '#fdd835',\n  700: '#fbc02d',\n  800: '#f9a825',\n  900: '#f57f17',\n  A100: '#ffff8d',\n  A200: '#ffff00',\n  A400: '#ffea00',\n  A700: '#ffd600'\n};\nexport default yellow;","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport isValueSelected from './isValueSelected';\nimport { withStyles } from '@material-ui/core/styles';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {},\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1,\n        borderTop: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    }\n  };\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$exclusive = props.exclusive,\n      exclusive = _props$exclusive === void 0 ? false : _props$exclusive,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"exclusive\", \"onChange\", \"orientation\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    var index = value && value.indexOf(buttonValue);\n    var newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  var handleExclusiveChange = function handleExclusiveChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], child.props.className),\n      onChange: exclusive ? handleExclusiveChange : handleChange,\n      selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n      size: child.props.size || size\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the buttons.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButtonGroup'\n})(ToggleButtonGroup);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      borderRadius: theme.shape.borderRadius,\n      padding: 11,\n      border: \"1px solid \".concat(fade(theme.palette.action.active, 0.12)),\n      color: fade(theme.palette.action.active, 0.38),\n      '&$selected': {\n        color: theme.palette.action.active,\n        backgroundColor: fade(theme.palette.action.active, 0.12),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.action.active, 0.15)\n        },\n        '& + &': {\n          borderLeft: 0,\n          marginLeft: 0\n        }\n      },\n      '&$disabled': {\n        color: fade(theme.palette.action.disabled, 0.12)\n      },\n      '&:hover': {\n        textDecoration: 'none',\n        // Reset on mouse devices\n        backgroundColor: fade(theme.palette.text.primary, 0.05),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the `label` wrapper element. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 7,\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: 15,\n      fontSize: theme.typography.pxToRem(15)\n    }\n  };\n};\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disabled\", \"disableFocusRipple\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, disabled && classes.disabled, selected && classes.selected, size !== 'medium' && classes[\"size\".concat(capitalize(size))]),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    \"aria-pressed\": selected\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button will be rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButton'\n})(ToggleButton);","import { shape, string, bool, arrayOf, func, any } from 'prop-types';\r\n\r\nimport { icon, size } from 'components/types';\r\n\r\nconst toggleOptionItemType = shape({\r\n\t// eslint-disable-next-line react/forbid-prop-types\r\n\tvalue: any.isRequired,\r\n\tlabel: string,\r\n\ticon,\r\n\tdisabled: bool,\r\n}).isRequired;\r\n\r\nconst toggleOptionsType = arrayOf(toggleOptionItemType);\r\n\r\nconst propTypes = {\r\n\tvalue: any.isRequired,\r\n\tonChange: func.isRequired,\r\n\t/**\r\n\t * - [\r\n\t *     {\r\n\t *         value: 'dark',\r\n\t *         label: 'Dark',\r\n\t *         icon: <DarkThemeIcon color=\"primary\" />,\r\n\t *     },\r\n\t *     {\r\n\t *         value: 'light',\r\n\t *         label: 'Light',\r\n\t *         icon: <LightThemeIcon style={{ color: yellow[500] }} />,\r\n\t *     },\r\n\t * ]\r\n\t */\r\n\toptions: toggleOptionsType.isRequired,\r\n\texclusive: bool,\r\n\tsize,\r\n};\r\n\r\nconst defaultProps = {\r\n\texclusive: true,\r\n\tsize: 'small',\r\n};\r\n\r\nexport { toggleOptionItemType, toggleOptionsType, propTypes, defaultProps };\r\n","import React from 'react';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\n\r\nimport Spacer from 'components/Spacer';\r\nimport { getElementFromElementOrType } from 'utils/react';\r\nimport { doesNotExist } from 'utils';\r\nimport { propTypes, defaultProps } from './types';\r\n\r\n/**\r\n * Toggle for a button groups.\r\n *\r\n * @example\r\n * ```js\r\n * <Toggle\r\n * \tvalue={theme}\r\n * \tonChange={setTheme}\r\n * \toptions={[\r\n * \t\t{\r\n * \t\t\tvalue: 'dark',\r\n * \t\t\tlabel: 'Dark',\r\n * \t\t\ticon: <DarkThemeIcon color=\"primary\" />,\r\n * \t\t},\r\n * \t\t{\r\n * \t\t\tvalue: 'light',\r\n * \t\t\tlabel: 'Light',\r\n * \t\t\ticon: <LightThemeIcon style={{ color: yellow[500] }} />,\r\n * \t\t},\r\n * \t]}\r\n * />\r\n * ```\r\n *\r\n * @component\r\n * @param {...(import('@material-ui/lab').ToggleButtonGroupProps)}\r\n */\r\nconst Toggle = ({ value, onChange, options, size, ...rest }) => {\r\n\tconst handleOnChange = (_, newValue) => {\r\n\t\tif (doesNotExist(newValue) || value === newValue) return;\r\n\t\tonChange(newValue);\r\n\t};\r\n\treturn (\r\n\t\t<ToggleButtonGroup value={value} onChange={handleOnChange} {...rest}>\r\n\t\t\t{options.map(elm => (\r\n\t\t\t\t<ToggleButton\r\n\t\t\t\t\tvalue={elm.value}\r\n\t\t\t\t\tkey={elm.value}\r\n\t\t\t\t\tdisabled={elm.disabled}\r\n\t\t\t\t\tsize={size}\r\n\t\t\t\t>\r\n\t\t\t\t\t{elm.icon && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{getElementFromElementOrType(elm.icon)}\r\n\t\t\t\t\t\t\t<Spacer direction=\"right\" />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{elm.label}\r\n\t\t\t\t</ToggleButton>\r\n\t\t\t))}\r\n\t\t</ToggleButtonGroup>\r\n\t);\r\n};\r\n\r\nToggle.propTypes = propTypes;\r\nToggle.defaultProps = defaultProps;\r\n\r\nexport default Toggle;\r\n","import React from 'react';\r\nimport { yellow, indigo } from '@material-ui/core/colors';\r\n\r\nimport Toggle from 'components/Toggle';\r\nimport { LightThemeIcon, DarkThemeIcon } from 'icons';\r\nimport useProfile from 'store/firebase/hooks/useProfile';\r\n\r\nconst ThemeToggle = () => {\r\n\tconst { theme, updateTheme } = useProfile();\r\n\r\n\treturn (\r\n\t\t<Toggle\r\n\t\t\tvalue={theme}\r\n\t\t\tonChange={updateTheme}\r\n\t\t\toptions={[\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 'dark',\r\n\t\t\t\t\tlabel: 'Dark',\r\n\t\t\t\t\ticon: <DarkThemeIcon style={{ color: indigo.A700 }} />,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 'light',\r\n\t\t\t\t\tlabel: 'Light',\r\n\t\t\t\t\ticon: <LightThemeIcon style={{ color: yellow[500] }} />,\r\n\t\t\t\t},\r\n\t\t\t]}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default ThemeToggle;\r\n","import ColorPicker from 'components/ColorPicker';\r\nimport React from 'react';\r\nimport useProfile from 'store/firebase/hooks/useProfile';\r\nimport { propTypes, defaultProps } from './types';\r\n\r\nconst ThemeColorPicker = ({ type }) => {\r\n\tconst {\r\n\t\tprimaryColor,\r\n\t\tsecondaryColor,\r\n\t\tupdatePrimaryColor,\r\n\t\tupdateSecondaryColor,\r\n\t} = useProfile();\r\n\tconst isPrimary = type === 'primary';\r\n\r\n\tconst onColorChange = v => {\r\n\t\tif (isPrimary) {\r\n\t\t\tupdatePrimaryColor(v);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tupdateSecondaryColor(v);\r\n\t};\r\n\r\n\tconst color = (isPrimary && primaryColor) || secondaryColor;\r\n\r\n\treturn <ColorPicker color={color} onColorChange={onColorChange} />;\r\n};\r\n\r\nThemeColorPicker.propTypes = propTypes;\r\nThemeColorPicker.defaultProps = defaultProps;\r\n\r\nexport default ThemeColorPicker;\r\n","import { string } from 'prop-types';\r\n\r\nconst propTypes = {\r\n\ttype: string.isRequired,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nexport { propTypes, defaultProps };\r\n","import ContainerWithCenteredItems from 'components/ContainerWithCenteredItems';\r\nimport React from 'react';\r\nimport { Switch as MuiSwitch } from '@material-ui/core';\r\n\r\nimport { ThemeIcon, AnimationIcon, PaletteIcon, AnalyticsIcon } from 'icons';\r\nimport LazyList from 'components/List/Lazy';\r\nimport { itemTypes, SPACER } from 'components/List/constants';\r\nimport ThemeToggle from 'containers/ThemeToggle';\r\nimport PaperContainerWithSpacing from 'components/PaperContainerWithSpacing';\r\nimport ThemeColorPicker from 'containers/ThemeColorPicker';\r\nimport useRoles from 'store/firebase/hooks/useRoles';\r\n\r\nconst Switch = () => <MuiSwitch disabled />;\r\n\r\nconst PREFERENCE_LIST = [\r\n\t{\r\n\t\ttype: itemTypes.SECTION_TITLE_WITH_DIVIDER,\r\n\t\tprimaryText: 'VIEW SETTINGS',\r\n\t},\r\n\t{\r\n\t\tprimaryText: 'Theme',\r\n\t\ticon: ThemeIcon,\r\n\t\t// TODO: If I decide to add redux, won't need this complication here\r\n\t\t// but it's not needed right now\r\n\t\tsecondaryAction: <ThemeToggle />,\r\n\t},\r\n\t{\r\n\t\tprimaryText: 'Primary Color',\r\n\t\ticon: PaletteIcon,\r\n\t\tsecondaryAction: <ThemeColorPicker type=\"primary\" />,\r\n\t},\r\n\t{\r\n\t\tprimaryText: 'Secondary Color',\r\n\t\ticon: PaletteIcon,\r\n\t\tsecondaryAction: <ThemeColorPicker type=\"secondary\" />,\r\n\t},\r\n\tSPACER,\r\n\t{\r\n\t\ttype: itemTypes.SECTION_TITLE_WITH_DIVIDER,\r\n\t\tprimaryText: 'ANIMATIONS',\r\n\t\tsecondaryText: 'Disable/Modify animations',\r\n\t},\r\n\t{\r\n\t\tprimaryText: 'Animations',\r\n\t\tsecondaryText: 'Turns on/off all the animations',\r\n\t\ticon: AnimationIcon,\r\n\t\tsecondaryAction: Switch,\r\n\t\tdisabled: true,\r\n\t},\r\n];\r\n\r\nconst getPreferenceList = (isDevUser = false) => [\r\n\t...((isDevUser && [\r\n\t\t{\r\n\t\t\ttype: itemTypes.SECTION_TITLE_WITH_DIVIDER,\r\n\t\t\tprimaryText: 'DEV SETTINGS',\r\n\t\t},\r\n\t\tSPACER,\r\n\t]) ||\r\n\t\t[]),\r\n\t...PREFERENCE_LIST,\r\n];\r\n\r\nconst Profile = () => {\r\n\tconst { isDevUser } = useRoles();\r\n\treturn (\r\n\t\t<ContainerWithCenteredItems vertical horizontal>\r\n\t\t\t<PaperContainerWithSpacing padding=\"50px !important\">\r\n\t\t\t\t<LazyList list={getPreferenceList(isDevUser)} />\r\n\t\t\t</PaperContainerWithSpacing>\r\n\t\t</ContainerWithCenteredItems>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","import { bool, node } from 'prop-types';\r\n\r\nconst propTypes = {\r\n\tchildren: node,\r\n\thorizontal: bool,\r\n\tvertical: bool,\r\n};\r\n\r\nconst defaultProps = {\r\n\tchildren: '',\r\n\thorizontal: true,\r\n\tvertical: false,\r\n};\r\n\r\nexport { propTypes, defaultProps };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { propTypes, defaultProps } from './types';\r\n\r\nconst StyledGrid = styled(Grid)`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\t${({ $horizontal, $vertical }) => `\r\n\t\t${$horizontal && 'justify-content: center;'}\r\n\t\t${$vertical && 'height: 100%; align-items: center;'}\r\n\t`}\r\n`;\r\n\r\n/**\r\n * Centered Grid\r\n *\r\n * @component\r\n * @param {import('@material-ui/core').GridProps|import('react').HtmlHTMLAttributes}\r\n */\r\nconst ContainerWithCenteredItems = ({\r\n\tchildren,\r\n\thorizontal,\r\n\tvertical,\r\n\t...rest\r\n}) => (\r\n\t<StyledGrid $horizontal={horizontal} $vertical={vertical} {...rest}>\r\n\t\t{children}\r\n\t</StyledGrid>\r\n);\r\n\r\nContainerWithCenteredItems.propTypes = propTypes;\r\nContainerWithCenteredItems.defaultProps = defaultProps;\r\n\r\nexport default ContainerWithCenteredItems;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledWrapper = styled.span`\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\t${({ theme, $direction, $spacing }) => `\r\n\t\tmargin-${$direction}: ${theme.spacing($spacing)}px;\r\n\t`}\r\n`;\r\n\r\nexport default StyledWrapper;\r\n","import { direction, numberOrString } from 'components/types';\r\n\r\nconst propTypes = {\r\n\t/**\r\n\t * - Which direction do you want to apply margin to\r\n\t */\r\n\tdirection: direction.isRequired,\r\n\t/**\r\n\t * - The amount is passed in to the spacing method of Mui.\r\n\t * - By default 1-unit-spacing = 8px\r\n\t */\r\n\tspacing: numberOrString,\r\n};\r\nconst defaultProps = {\r\n\tspacing: 1,\r\n};\r\n\r\nexport { propTypes, defaultProps };\r\n","import React from 'react';\r\nimport StyledWrapper from './StyledWrapper';\r\nimport { defaultProps, propTypes } from './types';\r\n\r\n/**\r\n * Element that adds margin to the given direction based on the\r\n * spacing amount. The amount is passed in to the spacing method\r\n * of Mui. By default 1-unit-spacing = 8px\r\n *\r\n * @example\r\n * ```js\r\n * <Spacer direction=\"right\" spacing=\"5\" />\r\n * ```\r\n *\r\n * @component\r\n */\r\nconst Spacer = ({ direction, spacing }) => (\r\n\t<StyledWrapper\r\n\t\t$direction={direction}\r\n\t\t$spacing={\r\n\t\t\t(typeof spacing === 'string' && parseInt(spacing, 10)) || spacing\r\n\t\t}\r\n\t/>\r\n);\r\n\r\nSpacer.propTypes = propTypes;\r\nSpacer.defaultProps = defaultProps;\r\n\r\nexport default Spacer;\r\n","import { string, func } from 'prop-types';\r\n\r\nconst propTypes = {\r\n\tcolor: string,\r\n\tonColorChange: func.isRequired,\r\n};\r\n\r\nconst defaultProps = {\r\n\tcolor: '',\r\n};\r\n\r\nexport { propTypes, defaultProps };\r\n","import React, { forwardRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport Popover from 'components/Popover';\r\nimport { CheckboxIcon } from 'icons';\r\nimport TooltipButton from 'components/TooltipButton';\r\nimport { PRIMARY_COLOR, SECONDARY_COLOR } from 'theme';\r\nimport { propTypes, defaultProps } from './types';\r\n\r\nconst ColoredIcon = styled(CheckboxIcon)`\r\n\tmargin-left: -2px;\r\n\t${({ theme, $bg, $size }) =>\r\n\t\t($bg &&\r\n\t\t\t`\r\n\t\t\t\t// & .MuiSvgIcon-root {\r\n\r\n\t\t\t\t\tborder-radius: ${theme.shape.borderRadius}px;\r\n\t\t\t\t\twidth: ${$size}px;\r\n\t\t\t\t\theight: ${$size}px;\r\n\t\t\t\t\tfill: ${$bg} !important;\r\n\t\t\t\t\tcolor: ${$bg} !important;\r\n\t\t\t\t\tbackground-color: ${$bg} !important;\r\n\t\t\t\t// }\r\n\t\t`) ||\r\n\t\t''};\r\n`;\r\nconst ColorPicker = forwardRef(\r\n\t({ color, onColorChange, size = 20, ...rest }, ref) => {\r\n\t\tconst onClick = cb => {\r\n\t\t\tcb();\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<Popover\r\n\t\t\t\tbuttonComponent={\r\n\t\t\t\t\t<TooltipButton\r\n\t\t\t\t\t\ttooltip=\"Pick a color\"\r\n\t\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\t\ticon={<ColoredIcon $size={size} $bg={color} />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tcomponent={\r\n\t\t\t\t\t<TwitterPicker\r\n\t\t\t\t\t\tcolors={[\r\n\t\t\t\t\t\t\tPRIMARY_COLOR,\r\n\t\t\t\t\t\t\tSECONDARY_COLOR,\r\n\t\t\t\t\t\t\t'#f44336',\r\n\t\t\t\t\t\t\t'#ff9800',\r\n\t\t\t\t\t\t\t'#2196f3',\r\n\t\t\t\t\t\t\t'#4caf50',\r\n\r\n\t\t\t\t\t\t\t// '#FCB900',\r\n\t\t\t\t\t\t\t// '#7BDCB5',\r\n\t\t\t\t\t\t\t// '#00D084',\r\n\t\t\t\t\t\t\t// '#8ED1FC',\r\n\t\t\t\t\t\t\t// '#0693E3',\r\n\t\t\t\t\t\t\t// '#ABB8C3',\r\n\t\t\t\t\t\t\t// '#EB144C',\r\n\t\t\t\t\t\t\t// '#F78DA7',\r\n\t\t\t\t\t\t\t// '#9900EF',\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\tonChangeComplete={colors => onColorChange(colors.hex)}\r\n\t\t\t\t\t\t{...rest}\r\n\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tpassCallback\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nColorPicker.propTypes = propTypes;\r\nColorPicker.defaultProps = defaultProps;\r\n\r\nexport default ColorPicker;\r\n","import { bool, object } from 'prop-types';\r\n\r\nconst propTypes = {\r\n\tcontainerProps: object,\r\n\tpaperProps: object,\r\n\tnoBg: bool,\r\n};\r\n\r\nconst defaultProps = {\r\n\tcontainerProps: {},\r\n\tpaperProps: {},\r\n\tnoBg: false,\r\n};\r\n\r\nexport { propTypes, defaultProps };\r\n","import React, { useState } from 'react';\r\nimport { Box, Paper } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nimport ContainerWithCenteredItems from 'components/ContainerWithCenteredItems';\r\nimport { propTypes, defaultProps } from './types';\r\n\r\nconst PaperWrapper = styled(Paper)`\r\n\twidth: 100%;\r\n\ttext-align: left;\r\n\t${({ theme, $bg }) => `\r\n\t\t// margin-bottom: ${theme.spacing(2)}px;\r\n\t\tbackground-color: ${\r\n\t\t\t($bg &&\r\n\t\t\t\t(theme.palette[$bg]?.main ||\r\n\t\t\t\t\ttheme.palette.background[$bg] ||\r\n\t\t\t\t\t$bg)) ||\r\n\t\t\ttheme.palette.background.paper\r\n\t\t};\r\n\t`}\r\n`;\r\n\r\nconst NoBgWrapper = styled.div`\r\n\t${({ theme }) => `\r\n\t\t& * {\r\n\t\t\tborder-radius: ${theme.shape.borderRadius}px;\r\n\t\t}\r\n\t`}\r\n`;\r\n\r\nconst PaperContainerWithSpacing = ({\r\n\tcontainerProps,\r\n\tpaperProps,\r\n\tnoBg,\r\n\t...boxProps\r\n}) => {\r\n\tconst [isHovering, setIsHovering] = useState(false);\r\n\tconst onEnter = () => setIsHovering(true);\r\n\tconst onLeave = () => setIsHovering(false);\r\n\r\n\tconst child = <Box py={2} px={4} textAlign=\"left\" {...boxProps} />;\r\n\r\n\treturn (\r\n\t\t<ContainerWithCenteredItems {...containerProps}>\r\n\t\t\t{(noBg && <NoBgWrapper>{child}</NoBgWrapper>) || (\r\n\t\t\t\t<PaperWrapper\r\n\t\t\t\t\televation={(isHovering && 3) || 1}\r\n\t\t\t\t\tonMouseEnter={onEnter}\r\n\t\t\t\t\tonMouseLeave={onLeave}\r\n\t\t\t\t\t{...paperProps}\r\n\t\t\t\t>\r\n\t\t\t\t\t{child}\r\n\t\t\t\t</PaperWrapper>\r\n\t\t\t)}\r\n\t\t</ContainerWithCenteredItems>\r\n\t);\r\n};\r\n\r\nPaperContainerWithSpacing.propTypes = propTypes;\r\nPaperContainerWithSpacing.defaultProps = defaultProps;\r\n\r\nexport default PaperContainerWithSpacing;\r\n","import loadable from 'utils/loadable';\r\n\r\nexport default loadable(() => import('./index'));\r\n","const itemTypes = {\r\n\tSECTION_TITLE: 'SectionTitle',\r\n\tSECTION_TITLE_WITH_DIVIDER: 'SectionTitleWithDivider',\r\n\tSPACER: 'Spacer',\r\n\tDIVIDER: 'Divider',\r\n};\r\n\r\nconst SPACER = {\r\n\ttype: itemTypes.SPACER,\r\n};\r\n\r\nexport { itemTypes, SPACER };\r\n"],"sourceRoot":""}